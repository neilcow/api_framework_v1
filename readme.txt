
# 发邮件
# 记录 log
# 动态数据处理
# 测试用例关联，都要依赖充值
# 正则表达式
# 数据库状态

# 注册
# 登录
# 充值
# 提现
# 添加项目
# 审核项目
# 投资
# 获取项目

# logger
# yaml

# 配置文件
1、py文件，非常灵活，只有python代码能用，动态的数据例如 项目文件路径，适合翻到py文件
2、yaml，使用java，读取解析简介智能，对于纯静态的数据适合放到yaml中
3、ini. 读取比较复杂，以前用的很多，

框架的分层：
1、run_test.py :作用：代码入口，收集测试用例，生成测试报告
2、测试逻辑层， test_cases包，各个模块的测试用例方法，便于管理，
3、数据管理层，data，excel数据
4、业务逻辑层，(request_handler,excel_handler)通用的
# logger，访问数据库
5、配置文件，（和项目相关联的，项目地址，数据库地址，logger级别）
6、测试报告